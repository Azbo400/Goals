{"version":3,"sources":["components/ProgressBar.js","components/Card.js","components/MainPage.js","components/AddNew.js","components/App.js","serviceWorker.js","index.js"],"names":["Filler","props","console","log","percentage","react_default","a","createElement","className","style","width","concat","ProgressBar","ProgressBar_Filler","this","Component","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","completed","goals","JSON","parse","localStorage","getItem","state","setState","setItem","id","stringify","moment","startday","days","endday","diff","now","Date","month","getMonth","toString","padStart","day","getDate","c","getFullYear","n","Math","round","delete","old","splice","length","removeItem","window","location","reload","display","alignItems","color","goal","lib_default","name","onClick","justifyContent","margin","marginLeft","components_ProgressBar","MainPage","rendercards","undefined","textAlign","map","i","components_Card","key","fontFamily","fontWeight","paddingBottom","Link","to","size","onChange","event","defineProperty","target","value","appendToStorage","data","newstring","push","onSubmit","preventDefault","redirect","type","placeholder","Redirect","App","BrowserRouter","Switch","Route","exact","path","component","AddNew","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c62955d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Filler = (props) => {\r\n  console.log(props.percentage);\r\n  return <div className=\"filler\" style={{width: `${props.percentage}%`}}/>\r\n}\r\n\r\nclass ProgressBar extends Component {\r\n  render() { \r\n    return (  \r\n      <div>\r\n        <div className='progressbar'>\r\n          <Filler percentage={this.props.percentage}/>\r\n        </div>\r\n        <p>{this.props.percentage}% till completion date</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default ProgressBar;","import React, { Component } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport moment from 'moment';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var goals = JSON.parse(localStorage.getItem('cards'));\r\n    this.state = {\r\n      completed: goals[this.props.id].completed,\r\n      percentage: null\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.percentage();\r\n  }\r\n\r\n  completed = () => {\r\n    var goals = JSON.parse(localStorage.getItem('cards'));\r\n\r\n    if(this.state.completed) {\r\n      this.setState({completed: false});\r\n      localStorage.setItem('completed' + this.props.id, this.state.completed)\r\n      goals[this.props.id].completed = false;\r\n    } else {\r\n      this.setState({completed: true});\r\n      localStorage.setItem('completed' + this.props.id, this.state.completed)\r\n      goals[this.props.id].completed = true;\r\n    }\r\n    localStorage.setItem('cards', JSON.stringify(goals));\r\n    console.log(goals[this.props.id].completed); \r\n  }\r\n\r\n  percentage = () => {\r\n    var goals = JSON.parse(localStorage.getItem('cards'));\r\n    var a = moment(goals[this.props.id].startday, 'YYYY-MM-DD');\r\n    var b = moment(goals[this.props.id].endday, 'YYYY-MM-DD');\r\n    var days = b.diff(a, 'days');\r\n\r\n    // current day\r\n    const now = new Date();\r\n    const month = (now.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = now.getDate().toString().padStart(0, '0');\r\n    \r\n    var c = moment(`${now.getFullYear()}-${month}-${day}`, 'YYYY-MM-DD');\r\n    var d = moment(goals[this.props.id].endday, 'YYYY-MM-DD');\r\n    var differencebetweenday = d.diff(c, 'days'); \r\n\r\n    var n = days-differencebetweenday;\r\n    this.setState({percentage: Math.round(n/days * 100)}); \r\n  }\r\n\r\n  delete = () => {\r\n    var old = JSON.parse(localStorage.getItem('cards'));\r\n    old.splice(this.props.id, 1);\r\n    localStorage.setItem('cards', JSON.stringify(old));\r\n    \r\n    // should change this to forceUpdate or update state to refresh component\r\n\r\n    if(old.length === 0) {\r\n      localStorage.removeItem('cards');\r\n    }\r\n    window.location.reload();\r\n  }\r\n\r\n  render() { \r\n    console.log(this.state.completed);\r\n    return (  \r\n      <div className='card'>\r\n        <div style={{display: 'flex', alignItems: 'center'}}>\r\n          <h1 style={{color: 'black'}}>{this.props.goal}</h1>\r\n          <FontAwesome name=\"trash-alt\" className=\"trash\" onClick={this.delete}/>\r\n        </div>\r\n        {this.state.completed ?\r\n          <div style={{display: 'flex'}} className=\"markascomplete\" onClick={this.completed}>\r\n            <FontAwesome name=\"check\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}/>\r\n            <p style={{margin: 0, marginLeft: 10}}>Completed. Good Job!</p>\r\n          </div>:\r\n          <div>\r\n            <ProgressBar percentage={this.state.percentage}/>\r\n            <div style={{display: 'flex'}} className=\"markascomplete\" onClick={this.completed}>\r\n              <FontAwesome name=\"check\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}/>\r\n              <p style={{margin: 0, marginLeft: 10}}>Mark as completed</p>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from './Card.js';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MainPage extends Component {\r\n  rendercards = () => {\r\n    if(localStorage.getItem('cards') === null || localStorage.getItem('cards') === undefined) {\r\n      return <div style={{color: 'white', textAlign: 'center'}}><p>You do not have any goals set yet.</p><br /><p>To add one click the + button in the right corner.</p></div>;\r\n    } else {\r\n      var goals = JSON.parse(localStorage.getItem('cards'));\r\n      return (\r\n        <div className=\"cardouter\">\r\n          {goals.map((a, i) => {\r\n            return [\r\n              <Card key={i} id={i} goal={a.goal}/>\r\n            ];\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (  \r\n      <div style={{fontFamily: 'Montserrat', fontWeight: 'bold'}} className=\"MainPage\">\r\n        <h1 style={{textAlign: 'center', fontWeight: 800, color: 'white', paddingBottom: 2}}>Goals</h1>\r\n        <div> \r\n          {this.rendercards()}\r\n        </div>\r\n        <Link to=\"/new\">\r\n          <FontAwesome name=\"plus\" className=\"addnew\" size=\"2x\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const now = new Date();\r\n    const month = (now.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = now.getDate().toString().padStart(0, '0');\r\n\r\n    this.state = {\r\n      completed: false,\r\n      startday: `${now.getFullYear()}-${month}-${day}`,\r\n      endday: '',\r\n      goal: '',\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n\r\n  appendToStorage = (name, data) => {\r\n    var old = localStorage.getItem(name);\r\n    if(old === null) old = \"\";\r\n    if(localStorage.getItem(name) === undefined || localStorage.getItem(name) === null) {\r\n      // this function appends data to localstorage \r\n      localStorage.setItem(name, '[' + old + data + ']');\r\n    } else if(typeof localStorage.getItem(name) === \"string\"){\r\n      // we need to append the data because the object already exists\r\n      var newstring = JSON.parse(old);\r\n      newstring.push(JSON.parse(data));\r\n      localStorage.setItem('cards', JSON.stringify(newstring));\r\n      console.log(JSON.stringify(newstring))\r\n    }\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    var goal = {\r\n      completed: this.state.completed, \r\n      startday: this.state.startday,\r\n      endday: this.state.endday,\r\n      goal: this.state.goal\r\n    }\r\n    this.appendToStorage('cards', JSON.stringify(goal));\r\n\r\n    this.setState({redirect: true})\r\n    console.log(JSON.parse(localStorage.getItem('cards')));\r\n  };\r\n\r\n\r\n  render() { \r\n    return (  \r\n      <div className='AddNewPage'>\r\n        <h1 style={{textAlign: 'center', fontWeight: 800, color: 'white', margin: 0}}>Add New Goal</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input type=\"text\" name=\"goal\" placeholder=\"Goal\" onChange={this.onChange}/>\r\n          <p>Start date:</p>\r\n          <input type=\"date\" name=\"startday\" value={this.state.startday} onChange={this.onChange}/><br />\r\n          <p>End Date:</p>\r\n          <input type=\"date\" name=\"endday\" placeholder=\"End Date\" onChange={this.onChange}/><br />\r\n          <input type=\"submit\" value=\"Done\" />\r\n        </form>\r\n\r\n        {this.state.redirect ? <Redirect to=\"/\" /> : false}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Card;","import React, { Component } from 'react';\nimport '../App.css';\nimport './MainPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport MainPage from './MainPage';\nimport AddNew from './AddNew';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/new\" component={AddNew} />\n          <Route component={MainPage} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}